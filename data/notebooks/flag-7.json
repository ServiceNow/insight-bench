{
    "dataset_csv_path": "data/notebooks/csvs/flag-7.csv",
    "user_dataset_csv_path": null,
    "metadata": {
        "goal": "Analyze the workload distribution among agents to identify any overload situations, specifically focusing on any agent with increasing assignments.",
        "role": "L2 Incident Analyst",
        "category": "Incident Management",
        "dataset_description": "The dataset comprises 500 entries simulating ServiceNow incidents table, detailing various attributes such as category, state, open and close dates, involved personnel, and incident specifics like description, and priority. It captures incident management activities with fields like 'opened_at', 'closed_at', 'assigned_to', 'short_description', and 'priority', reflecting the operational handling and urgency of issues across different locations and categories.",
        "header": "Incident Assignment and Resolution Efficiency Analysis (Flag 7)"
    },
    "insight_list": [
        {
            "data_type": "descriptive",
            "insight": "Beth Anglin has a higher average number of incident assignments compared to other agents",
            "insight_value": {
                "agents": [
                    "Beth Anglin"
                ],
                "average_incidents": "Highest: 188"
            },
            "plot": {
                "plot_type": "bar",
                "title": "Overall Average Number of Incidents Assigned to Each Agent",
                "x_axis": {
                    "name": "Agent",
                    "value": [
                        "Beth Anglin",
                        "Luke Wilson",
                        "Howard Johnson",
                        "Charlie Whitherspoon",
                        "Fred Luddy"
                    ],
                    "description": "This represents the agents handling incidents."
                },
                "y_axis": {
                    "name": "Average Number of Incidents",
                    "value": [
                        188,
                        78,
                        87,
                        69,
                        78
                    ],
                    "description": "This represents the average number of incidents assigned to each agent, calculated over the recent period."
                },
                "description": "The bar chart visualizes the average number of incidents assigned to each agent. It shows that Beth Anglin has a higher average number of incidents compared to their peers. This raises questions about workload distribution and the factors contributing to this imbalance."
            },
            "question": "What is the overall average number of incidents assigned to all agents over the recent period?",
            "actionable_insight": "Given the higher average number of incidents assigned to Beth Anglin, it is crucial to investigate the reasons behind this distribution. Potential factors could include the types of incidents they are handling, their expertise in specific areas, or even operational needs. Understanding these factors will help in making informed decisions to ensure a balanced workload distribution and to maintain efficiency and fairness within the team.",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Assuming df is already loaded and has the necessary columns\ndf[\"opened_at\"] = pd.to_datetime(df[\"opened_at\"])\n\n# Group the data by 'assigned_to' and count the number of incidents for each agent\nagent_incident_counts = df.groupby('assigned_to').size()\n\n# Calculate the average number of incidents per agent\n# average_incidents_per_agent = agent_incident_counts.mean()\n\n# Create a DataFrame for plotting\nagent_average_df = pd.DataFrame({\n    'Agent': agent_incident_counts.index,\n    'Average Incidents': agent_incident_counts\n})\n\n# Plotting the average number of incidents per agent\nplt.figure(figsize=(10, 6))\nax = sns.barplot(x='Agent', y='Average Incidents', data=agent_average_df)\nplt.title('Overall Average Number of Incidents Assigned to Each Agent')\nplt.ylabel('Average Number of Incidents')\nplt.xlabel('Agent')\nplt.xticks(rotation=45)\n\n# Annotate each bar with its value\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                (p.get_x() + p.get_width() / 2., p.get_height()), \n                ha = 'center', va = 'center', \n                xytext = (0, 9), \n                textcoords = 'offset points')\nplt.show()"
        },
        {
            "data_type": "comparative",
            "insight": "Beth Anglin received significantly increasing incident assignments over the time period. We see a linearly increasing trend",
            "insight_value": {
                "agents": [
                    "Beth Anglin"
                ],
                "time_period": "01-2023 to 01-2024",
                "comparison": "higher and increasing compared to other agents"
            },
            "plot": {
                "plot_type": "bar",
                "title": "Incident Assignment Comparison Over time period",
                "x_axis": {
                    "name": "Agent",
                    "value": [
                        "Beth Anglin",
                        "Luke Wilson",
                        "Howard Johnson",
                        "Charlie Whitherspoon",
                        "Fred Luddy"
                    ],
                    "description": "This represents the agents handling incidents."
                },
                "y_axis": {
                    "name": "Number of Incidents",
                    "value": "Count of incidents assigned per agent",
                    "description": "This represents the number of incidents assigned to each agent during the specified period."
                },
                "description": "The bar chart illustrates the distribution of incident assignments among agents from 01-2023 to 01-2024. During this period, Beth Anglin is being  assigned a increasing  number of incidents compared to their peers. "
            },
            "question": "How do the incident assignments to Beth Anglin compare to other agents over the specific same time frame?",
            "actionable_insight": "The disparity in incident assignments during this period suggests a need to analyze the underlying reasons. It is crucial to investigate whether this was due to the specific skills of the agent, the nature of the incidents, or possibly the absence of other agents. Understanding these factors will aid in ensuring a more equitable distribution of workload and could lead to adjustments in team scheduling or training to prevent similar imbalances in the future.",
            "code": "# Sort the DataFrame by the opened_at column\ndf = df.sort_values(\"opened_at\")\ndf[\"opened_at\"] = pd.to_datetime(df[\"opened_at\"])\ndf[\"closed_at\"] = pd.to_datetime(df[\"closed_at\"])\n# Create a new column 'month_year' to make the plot more readable\ndf[\"month_year\"] = df[\"opened_at\"].dt.to_period(\"M\")\n\n# Create a countplot\nplt.figure(figsize=(12, 6))\nsns.countplot(data=df, x=\"month_year\", hue=\"assigned_to\")\nplt.title(\"Number of Incidents Created Over Time for each Agent\")\nplt.xticks(rotation=45)\nplt.show()"
        },
        {
            "data_type": "diagnostic",
            "insight": "Increase in network category incidents assigned to Beth Anglin",
            "insight_value": {
                "category": "Network",
                "trend": "Increasing assignment to Beth Anglin"
            },
            "plot": {
                "plot_type": "histogram",
                "title": "Distribution of Incident Categories for Beth Anglin",
                "x_axis": {
                    "name": "Incident Category",
                    "value": [
                        "Network",
                        "Software",
                        "Hardware",
                        "Inquiry/Help",
                        "Database"
                    ],
                    "description": "This represents the different categories of incidents handled by the agents."
                },
                "y_axis": {
                    "name": "Number of Incidents",
                    "value": "Count of incidents in each category",
                    "description": "This shows the number of incidents assigned to each category"
                },
                "description": "The histogram displays a noticeable increase in the number of network-related incidents assigned to Beth Anglin during the period when other agents were on PTO. This trend suggests a targeted allocation of network incidents to Beth, potentially due to her specialized skills or experience in handling such issues."
            },
            "question": "Is there a change in the category of incidents assigned to Beth Anglin during the other agents' PTO?",
            "actionable_insight": "Given the observed increase in network incident assignments to Beth Anglin, it is advisable to further investigate the causes behind this trend. If it is indeed due to Beth's proficiency in network issues, consider leveraging her expertise to train other team members. This strategy could help in distributing similar incidents more evenly in the future, ensuring balanced workload distribution and enhancing team resilience.",
            "code": "import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Put the data into a DataFrame\n\n# Sort the DataFrame by the opened_at column\ndf = df[df['assigned_to'] == 'Beth Anglin']\ndf = df.sort_values(\"opened_at\")\ndf[\"opened_at\"] = pd.to_datetime(df[\"opened_at\"])\ndf[\"closed_at\"] = pd.to_datetime(df[\"closed_at\"])\n# Create a new column 'month_year' to make the plot more readable\ndf[\"month_year\"] = df[\"opened_at\"].dt.to_period(\"M\")\n\n# Create a countplot\nplt.figure(figsize=(12, 6))\nsns.countplot(data=df, x=\"month_year\", hue=\"category\")\nplt.title(\"Number of Incidents Created Over Time by Category\")\nplt.xticks(rotation=45)\nplt.show()"
        },
        {
            "data_type": "analytical",
            "insight": "The resolution time (TTR) for Beth Anglin  remains uniform over the entire timeline",
            "insight_value": {
                "observation": "Consistent TTR indicating sustained productivity despite increased workload"
            },
            "plot": {
                "plot_type": "line",
                "title": "Trend of Resolution Time (TTR) for Beth Anglin  Over Time",
                "x_axis": {
                    "name": "Time",
                    "value": "Timeline from the start to the end of the data set",
                    "description": "This axis represents the timeline over which the TTR data is analyzed."
                },
                "y_axis": {
                    "name": "Resolution Time (days)",
                    "value": "Measured TTR in days",
                    "description": "This represents the time taken to resolve incidents, measured in days."
                },
                "description": "The line plot illustrates the trend of resolution times for Beth Anglin throughout the analyzed period. Despite a noticeable increase in their workload, the TTR remains consistently uniform across the timeline. This indicates that Beth Anglin was able to maintain their productivity and service quality even under increased workload conditions."
            },
            "question": "How does the resolution time (TTR) for incidents handled by Beth Anglin and Luke Wilson during this period compare to other times?",
            "actionable_insight": "The consistent TTR achieved by Beth Anglin , even during periods of increased workload, underscores their efficiency and capability in managing incidents effectively. It is advisable to recognize their resilience and perhaps consider them for further training and leadership roles in managing workflow. Additionally, their strategies and work habits could be studied and possibly replicated across the team to enhance overall productivity and service quality.",
            "code": "# Convert opened_at and closed_at to datetime\ndf[\"opened_at\"] = pd.to_datetime(df[\"opened_at\"])\ndf[\"closed_at\"] = pd.to_datetime(df[\"closed_at\"])\n# Compute resolution time in days\ndf[\"resolution_time\"] = (df[\"closed_at\"] - df[\"opened_at\"]).dt.total_seconds() / 86400\n\nsns.lineplot(x=df[\"opened_at\"], y=df[\"resolution_time\"], hue=df[\"assigned_to\"])\nplt.xlabel(\"Creation date\")\nplt.ylabel(\"Time to resolution\")\nplt.title(\"Time to resolution by creation date\")"
        },
        {
            "data_type": "predictive",
            "insight": "Continued increase in assignments for Beth Anglin if the trend during leave periods is not addressed",
            "insight_value": {
                "trend": "Linear Increase",
                "prediction": "Continued escalation in assignments"
            },
            "description": "The forecast model indicates a linear increase in the number of incidents assigned to Beth Anglin over time, starting from the date immediately following that other agents have not yet returned to work or for any other reasons. This trend suggests that if proactive measures are not taken to address the distribution of work during leave periods, Beth Anglin could continue to face an increasing workload. Such a scenario could lead to potential burnout, decreased job satisfaction, and reduced overall effectiveness in handling incidents.",
            "recommendation": {
                "action": "Implement proactive workload management strategies",
                "expected_outcome": "Prevent workload escalation and maintain balanced distribution",
                "urgency": "High"
            },
            "actionable_insight": "To mitigate the risk of continued workload escalation for Beth Anglin, it is crucial to implement proactive workload management strategies. These might include cross-training other agents to handle similar types of incidents, creating a more robust backup system for periods of high leave, or even reevaluating current leave policies to ensure that no single agent is overwhelmed. Regular review and adjustment of workload distribution, especially during peak leave times, will help maintain a balanced workload and prevent the negative consequences of overburdening individual team members.",
            "code": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom sklearn.linear_model import LinearRegression\n\n# Load data\ndataset_path = \"csvs/flag-7.csv\"\n\n\n# Load the dataset\ndf = pd.read_csv(dataset_path)\ndf = df[df['assigned_to'] == 'Beth Anglin']\ndf['opened_at'] = pd.to_datetime(df['opened_at'])\n\n# Define the cutoff date for the training data\ncutoff_date = pd.to_datetime(\"2024-01-01\")\n\n# Filter the data to include only dates up to the cutoff date\ntraining_data = df[df['opened_at'] <= cutoff_date]\n\n# Count incidents over time for Beth Anglin in the training data\nincident_counts = training_data.groupby(training_data['opened_at'].dt.to_period(\"M\")).size().reset_index(name='counts')\nincident_counts['date_ordinal'] = incident_counts['opened_at'].dt.start_time.apply(lambda x: x.toordinal())\n\n# Prepare data for linear regression\nX = incident_counts['date_ordinal'].values.reshape(-1, 1)  # Reshape for sklearn\ny = incident_counts['counts'].values  # Target variable: number of incidents\n\n# Fit the linear regression model using only the training data\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# Define the start date for forecasting\nforecast_start_date = pd.to_datetime(\"2024-01-02\")\n\n# Generate future dates from the specified start date\nfuture_dates = pd.date_range(start=forecast_start_date, periods=120, freq='D')  # 4 months into the future\nfuture_dates_ordinal = [d.toordinal() for d in future_dates]\nfuture_preds = model.predict(np.array(future_dates_ordinal).reshape(-1, 1))\n\n# Plotting\nplt.figure(figsize=(12, 6))\nplt.scatter(incident_counts['opened_at'].dt.start_time, y, color='blue', label='Historical Incident Counts')\nplt.plot(future_dates, future_preds, color='red', linestyle='--', label='Predicted Incident Count Trend')\nplt.title('Projected Increase in Incident Assignments for Beth Anglin')\nplt.xlabel('Date')\nplt.ylabel('Number of Incidents Assigned')\nplt.legend()\nplt.grid(True)\n\n# Formatting the x-axis to make it more readable\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))\n\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()"
        }
    ],
    "insights": [
        "Beth Anglin has a higher average number of incident assignments compared to other agents",
        "Beth Anglin received significantly increasing incident assignments over the time period. We see a linearly increasing trend",
        "Increase in network category incidents assigned to Beth Anglin",
        "The resolution time (TTR) for Beth Anglin  remains uniform over the entire timeline",
        "Continued increase in assignments for Beth Anglin if the trend during leave periods is not addressed"
    ],
    "summary": "\n\n1. **Increasing Assignments Over Time**: A particular human agent, Beth Anglin, has been observed to have a linear increase in the number of incident assignments over time. This trend highlights a potential imbalance in workload distribution.\n2. **Need for Intervention**: The observed trends indicate that without intervention, the agent\u2019s ability to manage and resolve incidents efficiently may deteriorate further. This could impact overall team performance and quality."
}